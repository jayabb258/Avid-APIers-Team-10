{
	"info": {
		"_postman_id": "401e7bf0-2abc-41b6-95df-a455883b5303",
		"name": "Team-10 Avid APIers",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "User Login",
					"id": "a1e3d24b-5917-4ab9-9900-7b27cdb69460",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team10@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "Create Dietician",
					"id": "158c432c-4e56-4b08-a658-b3ef3fe0c10a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"9045783531\",\r\n  \"DateOfBirth\": \"2023-07-26T18:14:08.570Z\",\r\n  \"Education\": \"MBBS\",\r\n  \"Email\": \"Aa@gmail.com\",\r\n  \"Firstname\": \"John\",\r\n  \"HospitalCity\": \"Carmel\",\r\n  \"HospitalName\": \"Ascension\",\r\n  \"HospitalPincode\": \"123456\",\r\n  \"HospitalStreet\": \"warren\",\r\n  \"Lastname\": \"Adam\"\r\n \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/dietician"
					},
					"response": []
				},
				{
					"name": "Dietician Login",
					"id": "19f2156c-3757-434d-a8d9-7ac519fe3d01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Laugh44\",\r\n  \"userLoginEmail\": \"Aa@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				}
			],
			"id": "df261ba2-65ed-429c-86c1-39fee62b9f39",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8d5d4647-187b-4fd9-b99c-a04b156d9068",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8789d544-00e8-4c13-a1ce-4e4b5238d2cd",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Morbidity Positive Testing",
			"item": [
				{
					"name": "Admin User Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7e2210a4-388e-4d98-9fe0-07ccbca6e48d",
								"exec": [
									"pm.globals.set(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "de052572-67c1-4992-9098-3c46b5bf58bb",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"    const token = responseBody.token;\r",
									"\r",
									"    pm.globals.set(\"Bearertk\", token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e3c52da5-21c9-4beb-a388-fa34676d4865",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//   \"password\":\"{{pw}}\",\r\n//   \"userLoginEmail\":\"{{UserID}}\"\r\n// }\r\n\r\n{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team10@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "GET operation -200- AS ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27be77a2-f359-418c-b495-c57f466f2dbb",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"\r",
									"    console.log('pm.response',pm.response.json())\r",
									"\r",
									"    for(i=0;i<responseBody.length;i++){\r",
									"     \r",
									"    if(i===2)\r",
									"    {\r",
									"      \r",
									"          console.log('morbidity name',responseBody[i].morbidityTestName) \r",
									"\r",
									" pm.globals.set(\"morbidity_test_name\", responseBody[i].morbidityTestName)\r",
									"}\r",
									"\r",
									"}\r",
									"  \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f1d6178c-5f0e-4445-a397-ced24bbff717",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "GET AllMorbidities -200- AS DIETICIAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "824122c3-d3be-4d68-97ff-99b109d0ef0d",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"\r",
									"    console.log('pm.response',pm.response.json())\r",
									"\r",
									"    for(i=0;i<responseBody.length;i++){\r",
									"     //define an array in Javascript. Use Set instead\r",
									"\r",
									"   //  pm.collectionVariables.set('MorbidityTestNames',responseBody[i].morbidityTestName);\r",
									"    if(responseBody[i].morbidityTestName==='Fasting Glucose')\r",
									"    {\r",
									"         pm.collectionVariables.set('MorbidityTestName_Fasting_G',responseBody[i].morbidityTestName);\r",
									"      \r",
									"          console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"}\r",
									" if (responseBody[i].morbidityTestName==='Average Glucose')\r",
									"{\r",
									"  pm.collectionVariables.set('MorbidityTestName_Average_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='Plasma Glucose')\r",
									"{\r",
									"  pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='HbA1c')\r",
									"{\r",
									"     console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('MorbidityTestName_HBA1C',responseBody[i].morbidityTestName);\r",
									" // pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='TSH')\r",
									"{\r",
									"    // console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('thyroid_TSH',responseBody[i].morbidityTestName);\r",
									" // pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='T3')\r",
									"{\r",
									"     console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('thyroid_T3',responseBody[i].morbidityTestName);\r",
									" // pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='T4')\r",
									"{\r",
									"     console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('thyroid_T4',responseBody[i].morbidityTestName);\r",
									" \r",
									"}\r",
									"\r",
									"\r",
									"}})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7dd367e1-d664-4dc7-9e57-82f034f8ce39",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "Retrieve DiabetesTest HBA1C",
					"id": "84cf1358-6264-4142-891f-215c8e7dc9f9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{MorbidityTestName_HBA1C}}"
					},
					"response": []
				},
				{
					"name": "Retrieve Diabetes Test Average Glucose",
					"id": "e57de8fc-c2e1-437c-b239-c2edb189df14",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{MorbidityTestName_Average_G}}"
					},
					"response": []
				},
				{
					"name": "Retrieve Diabetes Test Fasting Glucose",
					"id": "49d926f4-fa9b-4824-8755-1f51e56bbf0b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{MorbidityTestName_Fasting_G}}"
					},
					"response": []
				},
				{
					"name": "Retrieve Diabetes Test  Plasma Glucose",
					"id": "25d86b33-145d-49fb-aded-344ca1c05a2b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{MorbidityTestName_Plasma_G}}"
					},
					"response": []
				},
				{
					"name": "Retrieve Thyroid Test T4",
					"id": "65c887d5-5f04-42d2-94bc-4e2a982eefd8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{thyroid_T4}}"
					},
					"response": []
				},
				{
					"name": "Retrieve Thyroid Test T3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "950286ed-c4e7-4d15-8c3a-10d84ce81c0b",
								"exec": [
									"const thyroid=pm.collectionVariables.get('thyroid_T');\r",
									"if(thyroid==undefined\r",
									")\r",
									"{\r",
									"console.log('ccccccccccccc',thyroid)\r",
									"}\r",
									"else{\r",
									"\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "059a7369-f2e4-4d30-8701-f5bf813b154d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{thyroid_T3}}"
					},
					"response": []
				},
				{
					"name": "Retrieve Thyroid Test TSH",
					"id": "c58f1649-5f1e-4ede-9af1-46bbade4b2e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{thyroid_TSH}}"
					},
					"response": []
				},
				{
					"name": "GET using Dietician Token",
					"id": "2b7c0042-ba46-42c5-9798-90db27a823a7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBYUBnbWFpbC5jb20iLCJpYXQiOjE3MjI1NzI2NzgsImV4cCI6MTcyMjYwMTQ3OH0.RYuGLmOJMeDJ0fvhZdyLEkD0Xvxn8ojW1ick9sxe5-xvaTzdSeBoP-EWXeNxHnpwwEvKIo9nQiLuQyRIcHWEFg"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity"
					},
					"response": []
				}
			],
			"id": "842fc292-53e2-4523-819c-276c0d50d7b4"
		},
		{
			"name": "MorbityTesting NegativeScenarios",
			"item": [
				{
					"name": "Admin User Login Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7e2210a4-388e-4d98-9fe0-07ccbca6e48d",
								"exec": [
									"pm.globals.set(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "de052572-67c1-4992-9098-3c46b5bf58bb",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"    const token = responseBody.token;\r",
									"\r",
									"    pm.globals.set(\"Bearertk\", token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "65eab61f-bb33-4e8e-8b65-93058c3a1f4a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//   \"password\":\"{{pw}}\",\r\n//   \"userLoginEmail\":\"{{UserID}}\"\r\n// }\r\n\r\n{\r\n  \"password\": \"test\",\r\n  \"userLoginEmail\": \"Team10@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "GET operation -200- AS ADMIN Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27be77a2-f359-418c-b495-c57f466f2dbb",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"id": "98bc9adf-e6c3-4aff-8233-2a4c0f00fa55",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "GET AllMorbidities withinvalid endpoint- AS DIETICIAN Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbcdfa96-f59f-4a00-9429-9a2b77463a49",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"\r",
									"    console.log('pm.response',pm.response.json())\r",
									"\r",
									"    for(i=0;i<responseBody.length;i++){\r",
									"     //define an array in Javascript. Use Set instead\r",
									"\r",
									"   //  pm.collectionVariables.set('MorbidityTestNames',responseBody[i].morbidityTestName);\r",
									"    if(responseBody[i].morbidityTestName==='Fasting Glucose')\r",
									"    {\r",
									"         pm.collectionVariables.set('MorbidityTestName_Fasting_G',responseBody[i].morbidityTestName);\r",
									"      \r",
									"          console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"}\r",
									" if (responseBody[i].morbidityTestName==='Average Glucose')\r",
									"{\r",
									"  pm.collectionVariables.set('MorbidityTestName_Average_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='Plasma Glucose')\r",
									"{\r",
									"  pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='HbA1c')\r",
									"{\r",
									"     console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('MorbidityTestName_HBA1C',responseBody[i].morbidityTestName);\r",
									" // pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='TSH')\r",
									"{\r",
									"    // console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('thyroid_TSH ',responseBody[i].morbidityTestName);\r",
									" // pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='T3')\r",
									"{\r",
									"     console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('thyroid_T3',responseBody[i].morbidityTestName);\r",
									" // pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									" if (responseBody[i].morbidityTestName==='T4')\r",
									"{\r",
									"     console.log('morbidity name-------',responseBody[i].morbidityTestName) \r",
									"  pm.collectionVariables.set('thyroid_T4 ',responseBody[i].morbidityTestName);\r",
									" // pm.collectionVariables.set('MorbidityTestName_Plasma_G',responseBody[i].morbidityTestName);\r",
									"}\r",
									"\r",
									"\r",
									"}})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "389e073a-6b90-4760-b7b8-f20f4412b9d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity with wrong testname",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6d2ac6e9-e4b3-442d-87d0-3fc54d7dc0bb",
								"exec": [
									"//First do pm.collectionVariables.get('arrayname')\r",
									"const testNameMap =pm.collectionVariables.get('MorbidityTestNames');\r",
									"//const data=pm.collectionVariables.get('MorbidityTestNames');\r",
									"\r",
									"console.log(testNameMap);\r",
									"\r",
									"function getTestNameById(MorbidityId) {\r",
									"\r",
									"    for(i=0;i<testNameMap.length;i++)\r",
									"    {\r",
									"        const morbidity_id=testNameMap[i].morbidityId;\r",
									"        console.log('morbidity_id---',morbidity_id);\r",
									"        if(morbidity_id==='DIA_FG')\r",
									"        {\r",
									"            console.log('testNameMap[i].morbidityTestName',testNameMap[i].morbidityTestName);\r",
									"    pm.collectionVariables.set('MorbidityTestNames',testNameMap[i].morbidityTestName);\r",
									"        }\r",
									"\r",
									"\r",
									"       // console.log('morbidity name',responseBody[i].morbidityTestName)\r",
									"       // if(testNameMap[i].MorbidityIdmorbidityTestName)\r",
									"    }\r",
									"//    // const item = testNameMap.find(obj => obj.morbidityTestId === MorbidityId);\r",
									"//    console.log('MorbidityId',MorbidityId)\r",
									"// console.log('found morbity test nameeeeeeeeeeeee',item)\r",
									"//     return item ? item.morbidityTestName : null; // Return null if not found\r",
									"}\r",
									"\r",
									"// Example usage\r",
									"// const morbidityTestName = getTestNameById(\"DIA_FG\");\r",
									"// console.log(morbidityTestName);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "13757a5b-590a-4643-ad2b-6d509b601940",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/fever"
					},
					"response": []
				},
				{
					"name": "Retrieve Thyroid  invalid testname",
					"id": "28e480c6-8496-48e3-ad10-e03e9907994b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/TSHh"
					},
					"response": []
				},
				{
					"name": "Retrieve Thyroid Test T3 with invalidtestname",
					"id": "5b205ae1-9b55-4301-a6b3-85876d1d2022",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/T3333333"
					},
					"response": []
				},
				{
					"name": "Retrieve Thyroid Test T4 with wrong testname",
					"id": "bd623db5-b65f-4d1a-9543-017a9f4b7c4e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/T444"
					},
					"response": []
				},
				{
					"name": "Retrieve DiabetesTest HBA1C negativeTesting Copy",
					"id": "4464a4c0-30be-4a57-ab33-4563db34b04c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/{{MorbidityTestName}}"
					},
					"response": []
				},
				{
					"name": "Retrieve Diabetes Test Average Glucose with invalid testname",
					"id": "77fcf65b-f6ad-454c-8eb1-64ea67b21040",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/avg glucos"
					},
					"response": []
				},
				{
					"name": "Retrieve Diabetes Test Fasting Glucose with invalid testname",
					"id": "156f9b71-2015-4556-a75e-81f2fc83b33c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/fasting glucose123"
					},
					"response": []
				},
				{
					"name": "Retrieve Diabetes Test  Plasma Glucose with inavalid Test_name",
					"id": "809b8f56-2606-4685-96e7-fb41cefb43dc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Bearertk}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity/plasma glucoseeee"
					},
					"response": []
				},
				{
					"name": "GET using Dietician Token Copy",
					"id": "1918ee4f-eb6b-41ec-8a75-d0ad747f1f6b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBYUBnbWFpbC5jb20iLCJpYXQiOjE3MjI1NzI2NzgsImV4cCI6MTcyMjYwMTQ3OH0.RYuGLmOJMeDJ0fvhZdyLEkD0Xvxn8ojW1ick9sxe5-xvaTzdSeBoP-EWXeNxHnpwwEvKIo9nQiLuQyRIcHWEFg"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/morbidity"
					},
					"response": []
				}
			],
			"id": "9ad3e2f1-0eb0-438c-8be6-959437a4950a"
		},
		{
			"name": "Patient - PUT & POST",
			"item": [
				{
					"name": "PreRequisites",
					"item": [
						{
							"name": "Temporary",
							"item": [
								{
									"name": "GET DIETITIAN 861 864",
									"id": "2f3dd6c2-563b-4276-beb7-133361bedb2d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{AdminToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{BaseURL}}/dietician/861"
									},
									"response": []
								},
								{
									"name": "GET DIETITIAN 861 864 Copy",
									"id": "1a2ea5f7-bc59-4ddb-8da7-3b146e9e4c1e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{AdminToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{BaseURL}}/dietician"
									},
									"response": []
								},
								{
									"name": "GET DIETITIAN 861 864 Copy 2",
									"id": "6f397f2f-79b0-4c63-9708-331901095379",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{AdminToken}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": "{{BaseURL}}/dietician/864"
									},
									"response": []
								}
							],
							"id": "2c84e4ff-ec2c-41f9-8e43-cab7afff15d8"
						},
						{
							"name": "Admin User Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7e2210a4-388e-4d98-9fe0-07ccbca6e48d",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de052572-67c1-4992-9098-3c46b5bf58bb",
										"exec": [
											"pm.test(\"Extract value and set global variable\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const token = responseBody.token;\r",
											"\r",
											"    pm.globals.set(\"AdminToken\", token);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "83bdd35f-c550-4149-9b93-b002500e9bd0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\":\"{{pw}}\",\r\n  \"userLoginEmail\":\"{{UserID}}\"\r\n}\r\n\r\n// {\r\n//   \"password\": \"test\",\r\n//   \"userLoginEmail\": \"Team10@gmail.com\"\r\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseURL}}/login"
							},
							"response": []
						},
						{
							"name": "Gather Dietitian Credentials",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "096cb141-cc07-441f-a45a-11bc74a0e33a",
										"exec": [
											"//Generate random contact number\r",
											"let phn = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\");// Generate random phone number\r",
											"pm.globals.set(\"phoneNumber\", phn.replace(/[^0-9.]+/g,\"\"));// remove hyphens\r",
											"\r",
											"//generate random DOB\r",
											"const mydate = new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")); //Generate a past date\r",
											"pm.globals.set(\"dob\", mydate.toISOString());//format it into ISO timestamp\r",
											"\r",
											"//generate random email address\r",
											"\r",
											"let mail = pm.variables.replaceIn(\"{{$randomEmail}}\");// Generate random email\r",
											"pm.globals.set(\"dietmail\",mail);\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dcd3af76-1ec8-403a-bb2e-74cb8589a2dd",
										"exec": [
											"// Import ID & PW for dietitian",
											"",
											"",
											"pm.test(\"Extract value and set global variable\", function () {",
											"    let responseBody = pm.response.json();",
											"    let dietid = responseBody.id;",
											"    let pwdiet = responseBody.loginPassword;",
											"",
											"    pm.globals.set(\"dietid\", dietid);",
											"    pm.globals.set(\"pwdiet\", pwdiet);});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0e33247d-6a43-4d80-85f2-ca88c69c59d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{AdminToken}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"ContactNumber\": \"{{phoneNumber}}\",\r\n//   \"DateOfBirth\": \"{{dob}}\",\r\n//   \"Education\": \"string\",\r\n//   \"Email\": \"string\",\r\n//   \"Firstname\": \"string\",\r\n//   \"HospitalCity\": \"string\",\r\n//   \"HospitalName\": \"string\",\r\n//   \"HospitalPincode\": \"string\",\r\n//   \"HospitalStreet\": \"string\",\r\n//   \"Lastname\": \"string\"\r\n \r\n// }\r\n\r\n\t{\r\n  \"ContactNumber\": \"{{phoneNumber}}\",\r\n  \"DateOfBirth\": \"{{dob}}\",\r\n  \"Education\": \"PhD\",\r\n  \"Email\": \"{{dietmail}}\",\r\n  \"Firstname\": \"Donna\",\r\n  \"HospitalCity\": \"Macon\",\r\n  \"HospitalName\": \"Summer Haven\",\r\n  \"HospitalPincode\": \"335001\",\r\n  \"HospitalStreet\": \"24 Boulevard\",\r\n  \"Lastname\": \"Summers\"\r\n \r\n}\r\n\r\n\r\n// \t{\r\n//   \"ContactNumber\": \"1251246353\",\r\n//   \"DateOfBirth\": \"1998-07-26T18:14:08.570Z\",\r\n//   \"Education\": \"PhD\",\r\n//   \"Email\": \"diet@avidapier.com\",\r\n//   \"Firstname\": \"Donna\",\r\n//   \"HospitalCity\": \"Macon\",\r\n//   \"HospitalName\": \"Summer Haven\",\r\n//   \"HospitalPincode\": \"335001\",\r\n//   \"HospitalStreet\": \"string\",\r\n//   \"Lastname\": \"Summers\"\r\n \r\n// }\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseURL}}/dietician"
							},
							"response": []
						},
						{
							"name": "Dietitian Login - Generate Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7e2210a4-388e-4d98-9fe0-07ccbca6e48d",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de052572-67c1-4992-9098-3c46b5bf58bb",
										"exec": [
											"pm.test(\"Extract value and set global variable\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const token = responseBody.token;\r",
											"\r",
											"    pm.globals.set(\"DietTokenKB\", token);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "29447780-c6e0-45d8-9a2b-4f7b03a9a60d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\":\"{{pwdiet}}\",\r\n  \"userLoginEmail\":\"{{dietmail}}\"\r\n}\r\n\r\n// {\r\n//   \"password\":\"Clover21\",\r\n//   \"userLoginEmail\":\"diet@avidapier.com\"\r\n// }\r\n\r\n\r\n//     \"id\": 861,\r\n//     \"loginPassword\": \"Clover21\",\r\n//     \"Firstname\": \"Donna\",\r\n//     \"Lastname\": \"Summers\",\r\n//     \"ContactNumber\": \"9413203887\",\r\n//     \"DateOfBirth\": \"2023-10-16T12:56:08.000+00:00\",\r\n//     \"Email\": \"diet@avidapier.com\",\r\n//     \"HospitalName\": \"Summer Haven\",\r\n//     \"HospitalStreet\": \"string\",\r\n//     \"HospitalCity\": \"Macon\",\r\n//     \"HospitalPincode\": \"335001\",\r\n//     \"Education\": \"PhD\"\r\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseURL}}/login"
							},
							"response": []
						}
					],
					"id": "79eb9308-cb24-4c8e-9279-7410cedf7b22"
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "POST Patient Positive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e690cf65-12d5-401d-a4cd-9918cd68508d",
										"exec": [
											"",
											"",
											"// Load lodash library code",
											"const lodash = require('lodash');",
											"",
											"",
											"//Select Random Allergy",
											"var allergy = lodash.sample([\"SOY\", \"ALMOND\", \"WALNUT\", \"PISTACHO\", \"SESAME\", \"PECAN\", \"CASHEW\", \"PEANUT\", \"EGG\", \"MILK\", \"NONE\"]);",
											"",
											"pm.environment.set(\"allergyKB\",allergy);",
											"",
											"// Select Random cuisine",
											"",
											"",
											"var cuisine = lodash.sample([\"ndian\", \"south indian\", \"rajasthani\", \"punjabi\", \"bengali\", \"orissa\", \"gujarati\", \"maharashtrian\", \"andhra\", \"kerala\", \"goan\", \"kashmiri\", \"himachali\", \"tamil nadu\", \"karnataka\", \"sindhi\", \"chhattisgarhi\", \"madhya pradesh\", \"assamese\", \"manipuri\", \"tripuri\", \"sikkimese\", \"mizo\", \"arunachali\", \"uttarakhand\", \"haryanvi\", \"awadhi\", \"bihari\", \"uttar pradesh\", \"delhi\", \"north indian\", \"italian\", \"french\", \"arabic\", \"lebanese\", \"thai\", \"mexican\", \"american\"]);",
											"",
											"pm.environment.set(\"cuisineKB\",cuisine);",
											"",
											"//select Random food preference",
											"",
											"var foodpref = lodash.sample([\"VEGAN\", \"VEGETARIAN\", \"JAIN\", \"EGGETARIAN\", \"NONVEG\"]);",
											"",
											"pm.environment.set(\"foodpref\",foodpref);",
											"",
											"",
											"//Generate random contact number",
											"let phn = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\");// Generate random phone number",
											"pm.environment.set(\"phoneptKB\", phn.replace(/[^0-9.]+/g,\"\"));// remove hyphens",
											"",
											"",
											"//generate random email address",
											"",
											"let mail = pm.variables.replaceIn(\"{{$randomEmail}}\");// Generate random email",
											"pm.environment.set(\"mailptKB\",mail);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6ba9c033-6eee-40e3-a32e-127bf8fff318",
										"exec": [
											"",
											"let response = pm.response.json();",
											"pm.environment.set(\"patientIdKB\", response.patientId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6482d75e-6914-4623-b319-1df4f129590d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{DietTokenKB}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"Patty\",\n\"LastName\": \"Bennet\",\n\"ContactNumber\": \"{{phoneptKB}}\",\n\"Email\": \"{{mailptKB}}\",\n\"Allergy\": \"{{allergyKB}}\",\n\"FoodPreference\": \"{{foodpref}}\",\n\"CuisineCategory\":\"{{cuisineKB}}\",\n\"DateOfBirth\": \"1980-01-01\"\n}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "d_e_N8Ov2/test.pdf"
										}
									]
								},
								"url": "{{BaseURL}}/patient"
							},
							"response": []
						}
					],
					"id": "a95ec6d1-9ea0-4776-b80c-371ba7c1c072"
				},
				{
					"name": "PostRequisites",
					"item": [
						{
							"name": "Delete Patient",
							"id": "68a5bccb-a933-42d3-b375-5abf1aaf4a2a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{DietTokenKB}}"
									}
								},
								"method": "DELETE",
								"header": [],
								"url": "{{BaseURL}}/patient/{{patientIdKB}}"
							},
							"response": []
						}
					],
					"id": "23db8cde-efdf-48ea-9167-208b9acb438b"
				}
			],
			"id": "281e42fe-d5cc-4640-9205-e2deeebfa918"
		},
		{
			"name": "Patient-GET & DELETE",
			"item": [
				{
					"name": "Dietician Login",
					"id": "b333214e-cb83-4b95-8558-80a59883a529",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Carnation77\",\r\n  \"userLoginEmail\": \"api10@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "6006ea1d-8878-400f-855c-2eab83cc9992",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhcGkxMEBnbWFpbC5jb20iLCJpYXQiOjE3MjI2MzYxNTAsImV4cCI6MTcyMjY2NDk1MH0.8J_faVH4kSHUUjLlVbMFaiIz-m0HTchKFM67jkgaWP8JIUEZjG4zntL7AFO-LQJ8jQMImIqnYbucpUnw9gm1rw"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/patient"
					},
					"response": []
				},
				{
					"name": "CreateDietcian Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fea6280e-bb02-4328-8153-3c44650d892f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtMTBAZ21haWwuY29tIiwiaWF0IjoxNzIyNTM4MTIyLCJleHAiOjE3MjI1NjY5MjJ9.7ALGV1S3lf64o6MQCt76-Z4dGGsr_-DRG4q2KZoKEejAgB2mpxnGCMwnmTXv9YRmL5ZXfZ6Kra_lgJzNjMB37w"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"9045783444\",\r\n  \"DateOfBirth\": \"2024-03-26T18:14:08.570Z\",\r\n  \"Education\": \"MBBS\",\r\n  \"Email\": \"api10@gmail.com\",\r\n  \"Firstname\": \"John\",\r\n  \"HospitalCity\": \"Carmel\",\r\n  \"HospitalName\": \"Ascension\",\r\n  \"HospitalPincode\": \"123456\",\r\n  \"HospitalStreet\": \"warren\",\r\n  \"Lastname\": \"Adam\"\r\n \r\n}\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/dietician"
					},
					"response": []
				},
				{
					"name": "Create Patient",
					"id": "eed53957-7984-4254-9fa1-3e53e54954b3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhcGkxMEBnbWFpbC5jb20iLCJpYXQiOjE3MjI2MzYxNTAsImV4cCI6MTcyMjY2NDk1MH0.8J_faVH4kSHUUjLlVbMFaiIz-m0HTchKFM67jkgaWP8JIUEZjG4zntL7AFO-LQJ8jQMImIqnYbucpUnw9gm1rw"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"value": "{ \"FirstName\": \"jaya\",\n\"LastName\": \"G\",\n\"ContactNumber\": \"9988775555\",\n\"Email\": \"test1@gmail.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"Vegan\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1986-05-14\"\n}\n",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "e15azMbfN/Diabetic_and_Hemogram_Test_Thyrocare_lab.pdf[1].pdf"
								}
							]
						},
						"url": "{{BaseURL}}/patient"
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "47d30db1-3a4e-4d27-a9f5-cf428d48f42e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Fab33\",\r\n  \"userLoginEmail\": \"api@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/login"
					},
					"response": []
				},
				{
					"name": "patient-morbidity",
					"id": "4f0bb02a-be49-482b-b1cc-94da6bb75080",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhcGkxMEBnbWFpbC5jb20iLCJpYXQiOjE3MjI2MzYxNTAsImV4cCI6MTcyMjY2NDk1MH0.8J_faVH4kSHUUjLlVbMFaiIz-m0HTchKFM67jkgaWP8JIUEZjG4zntL7AFO-LQJ8jQMImIqnYbucpUnw9gm1rw"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{BaseURL}}/patient/testReports/300"
					},
					"response": []
				}
			],
			"id": "83adc9cc-cfc0-4639-b11e-b7ef90e8992b"
		},
		{
			"name": "Dietician",
			"item": [
				{
					"name": "AdminLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"    const token = responseBody.token;\r",
									"\r",
									"    pm.globals.set(\"BearerTokenAdmin\", token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0963a031-0ba4-4f62-af70-efef1d621071",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{adminpassword}}\",\r\n  \"userLoginEmail\": \"{{adminemail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "GetALLDieticians",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"\r",
									"    \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "75654dff-d3e7-42ed-be23-ea75aad9336d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerTokenAdmin}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/dietician"
					},
					"response": []
				},
				{
					"name": "CreateDietcian",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"    const id = responseBody.id;\r",
									"    const  loginPassword = responseBody.loginPassword;\r",
									"    const  Email = responseBody.Email;\r",
									"    \r",
									"  \r",
									"    pm.globals.set(\"DieticianEmail\",Email);\r",
									"    \r",
									"  pm.globals.set(\"DieticianId\",id);\r",
									"    pm.globals.set(\"Dieticianpassword\", loginPassword);\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"    \r",
									"    \r",
									"\r",
									"    pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"    });\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "db030c4c-6cd6-4209-93a3-2909bf92bb4d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerTokenAdmin}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"1001023094\",\r\n  \"DateOfBirth\": \"2015-08-09\",\r\n  \"Education\": \"MBBS\",\r\n  \"Email\": \"Nee@gmail.com\",\r\n  \"Firstname\": \"John\",\r\n  \"HospitalCity\": \"Carmel\",\r\n  \"HospitalName\": \"Ascension\",\r\n  \"HospitalPincode\": \"123456\",\r\n  \"HospitalStreet\": \"warren\",\r\n  \"Lastname\": \"Adam\"\r\n \r\n}\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/dietician"
					},
					"response": []
				},
				{
					"name": "Update Dietician",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e3c228f4-ad8a-4c9a-be04-87aaffe910cd",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "df13c0b1-a9ae-410b-b1a9-0e719a1c8631",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerTokenAdmin}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"9078657809\",\r\n  \"DateOfBirth\": \"4567890\",\r\n  \"Education\": \"MD\",\r\n  \"Email\": \"Nn@gmail.com\",\r\n  \"Firstname\": \"John\",\r\n  \"HospitalCity\": \"Fishers\",\r\n  \"HospitalName\": \"st.vincent\",\r\n  \"HospitalPincode\": \"123456\",\r\n  \"HospitalStreet\": \"mbln\",\r\n  \"Lastname\": \"Adam\"\r\n \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/dietician/{{DieticianId}}"
					},
					"response": []
				},
				{
					"name": "GetDieticianwithID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"\r",
									"    \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "251300a6-be4c-49cd-b836-4372deb0d174",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerTokenAdmin}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/dietician/{{DieticianId}}"
					},
					"response": []
				},
				{
					"name": "dietician login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"    const token = responseBody.token;\r",
									"\r",
									"    pm.globals.set(\"BearerTokenDietician\", token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e3c228f4-ad8a-4c9a-be04-87aaffe910cd",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e011d8e1-4de2-4b32-9543-ece62a29d356",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerTokenAdmin}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{Dieticianpassword}}\",\r\n  \"userLoginEmail\": \"{{DieticianEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/login"
					},
					"response": []
				},
				{
					"name": "dietician logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"/*pm.test(\"Extract value and set global variable\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"    const token = responseBody.token;\r",
									"\r",
									"    pm.globals.set(\"BearerTokenDieticin\", token);\r",
									"    \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"});*/\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ba2f0240-b209-4113-b1c8-3373117144ea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerTokenAdmin}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{password for patients}}\",\r\n  \"userLoginEmail\": \"Selenium@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/logoutdietician"
					},
					"response": []
				},
				{
					"name": "Delete dietcian By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e3dbf6b-caaa-433b-b4d7-922d29ce63dc",
								"exec": [
									"\r",
									"    \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7e82d2b0-2998-4bce-a14e-bf50d7fad076",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerTokenAdmin}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/dietician/{{DieticianId}}"
					},
					"response": []
				}
			],
			"id": "cc867dff-6a7c-496c-9444-829d2cc38b76"
		},
		{
			"name": "Delete Patient",
			"id": "3c02e8d4-83c8-49c5-a470-c90647538c90",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhcGkxMEBnbWFpbC5jb20iLCJpYXQiOjE3MjI1NDIxMTEsImV4cCI6MTcyMjU3MDkxMX0.-zCgfmt9bWTweFpSv5qHp6N_rNaG1qLwagJXXcIip_WTs5zt4GjAmQSZuqLggQQeXDKFZOKfHs0B4EnrfcGaTg"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": "{{BaseURL}}/patient/300"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "MorbidityTestName_Fasting_G",
			"value": ""
		},
		{
			"key": "MorbidityTestName_Average_G",
			"value": ""
		},
		{
			"key": "MorbidityTestName_Plasma_G",
			"value": ""
		},
		{
			"key": "MorbidityTestName_HBA1C",
			"value": ""
		},
		{
			"key": "thyroid_TSH ",
			"value": ""
		},
		{
			"key": "thyroid_T3",
			"value": ""
		},
		{
			"key": "thyroid_T4 ",
			"value": ""
		},
		{
			"key": "thyroid_TSH",
			"value": ""
		},
		{
			"key": "thyroid_T4",
			"value": ""
		}
	]
}